swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase, including user and transaction management
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions:
    get:
      tags:
        - Transactions Module
      summary: Get transactions for the current month
      description: Retrieves all transactions for the authenticated user for the current month, grouped by account.
      parameters:
        - in: query
          name: month
          type: integer
          description: Month number (1-12) for which transactions should be retrieved
          required: true
        - in: query
          name: year
          type: integer
          description: Year in four digits, e.g., 2024
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionListResponse'
        '400':
          description: Invalid month or year format
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      tags:
        - Transactions Module
      summary: Get transaction details
      description: Retrieves details of a specific transaction by its ID.
      parameters:
        - in: path
          name: transactionId
          type: string
          description: ID of the transaction to retrieve
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetailResponse'
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    put:
      tags:
        - Transactions Module
      summary: Update transaction information
      description: Allows modification of specific fields within a transaction.
      parameters:
        - in: path
          name: transactionId
          type: string
          description: ID of the transaction to update
          required: true
        - in: body
          name: transaction
          description: Transaction update payload
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid request data
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  /transactions/{transactionId}/delete-info:
    delete:
      tags:
        - Transactions Module
      summary: Delete specific information from a transaction
      description: Deletes specific fields from the transaction without removing the transaction itself.
      parameters:
        - in: path
          name: transactionId
          type: string
          description: ID of the transaction
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Information removed from transaction
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  TransactionListResponse:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'

  TransactionDetailResponse:
    type: object
    properties:
      transaction:
        $ref: '#/definitions/Transaction'

  TransactionUpdateRequest:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      amount:
        type: number
      account:
        type: string
      category:
        type: string
      notes:
        type: string
